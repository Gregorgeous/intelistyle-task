"""
Django settings for api project.

Generated by 'django-admin startproject' using Django 2.2.3.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os
import dj_database_url  #(Heroku deployment)

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '@+8ht+!4lwz*ph^317tr1ykvahmxx07r&l###5fukqtwoh@+ib'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin', # built-in
    'django.contrib.auth', # built-in
    'django.contrib.contenttypes', # built-in
    'django.contrib.sessions', # built-in
    'django.contrib.messages', # built-in
    'django.contrib.staticfiles', # built-in
    'rest_framework', # custom
    'corsheaders', # custom
    'core' # custom 
]

MIDDLEWARE = [
    'whitenoise.middleware.WhiteNoiseMiddleware', # (Heroku deployment)
    'corsheaders.middleware.CorsMiddleware', # custom
    'django.middleware.security.SecurityMiddleware', # built-in
    'django.contrib.sessions.middleware.SessionMiddleware', # built-in
    'django.middleware.common.CommonMiddleware', # built-in
    'django.middleware.csrf.CsrfViewMiddleware', # built-in
    'django.contrib.auth.middleware.AuthenticationMiddleware', # built-in
    'django.contrib.messages.middleware.MessageMiddleware', # built-in
    'django.middleware.clickjacking.XFrameOptionsMiddleware', # built-in
]

# CORS for the Vue.js front-end
CORS_ORIGIN_WHITELIST = (
    'http://localhost:3000', # development
    'https://secret-brook-72301.herokuapp.com' # production
)

REST_FRAMEWORK = {
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE': 4
}

ROOT_URLCONF = 'api.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'api.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

PROJECT_ROOT   =   os.path.join(os.path.abspath(__file__)) #(heroku deployment)
STATIC_ROOT  =   os.path.join(PROJECT_ROOT, 'staticfiles') #(heroku deployment)
STATIC_URL = '/static/'

# Extra lookup directories for collectstatic to find static files (heroku deployment)
STATICFILES_DIRS = (
    os.path.join(PROJECT_ROOT, 'static'),
)

# Add configuration for static files storage using whitenoise  (heroku deployment)
STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'

# Handling media
MEDIA_URL = '/media/' # custom 
MEDIA_ROOT = os.path.join(BASE_DIR, 'media') # custom 

prod_db  =  dj_database_url.config(conn_max_age=500) #(heroku deployment)
DATABASES['default'].update(prod_db) #(heroku deployment)

ALLOWED_HOSTS = ['intelistyle-task-api.herokuapp.com', 'localhost']  #(heroku deployment)
AWS_PUBLIC_MEDIA_LOCATION = 'media/public'
